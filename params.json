{"name":"Fusion","tagline":"Fusion â€“ a multimodal interaction framework for task-oriented and object-oriented interfaces.","body":"## Design Goals\r\nFusion is an open source, modular, cross-platform interaction framework\r\ndesigned to rapidly prototype and develop multi-modal application interfaces. It seeks to expose an easy-to-consume API for user input in multiple simultaneous input modes. Initially, we provide modules for audio input to be recognized by a grammar and Sphinx ASR, and touch/mouse input.  See [Put That There 1](http://www.youtube.com/watch?v=RyBEUyEtxQo) and [Put That There 2](http://www.youtube.com/watch?v=0Pr2KIPQOKE) for an example of multimodal interaction.\r\n\r\nSee the [Fusion page](http://ccf.nuigroup.com/) at the NUI Group's website for a video of Fusion's demo in action. \r\n\r\nThis project was initially written for the Natural User Interface Group as part of Google Summer of Code 2011.\r\n\r\n## Features\r\n* __Cross-Platform__\r\nFusion is fully cross-platform. It runs on Windows, Linux, MacOSX and FreeBSD.\r\nThe same configurations and models apply across platforms, so if your application is\r\ncross-platform, we support it.\r\n\r\n* __Daemon__\r\nFusion runs as a daemon process. That means you can\r\nlaunch it on a different headless computer if you want (although currently some things\r\ndepend on the daemon running on localhost, and responsiveness could be an issue).\r\n\r\n* __Threading__\r\nWith Fusion, you have the ability to enable threading for any module you want.\r\nThat means you are finally able to use your Core 2 Duo / Quad Core to its full\r\npotential. Obviously, you can still use non-threaded mode.\r\n\r\n* __Remote API__\r\nFusion has a JSON API to control all its settings and adjust your pipeline remotely\r\nand on the fly. Interaction events are also served as JSON objects.\r\n\r\n* __HTML5 Administration__\r\nFusion's web interface makes use of the most recent developments in web\r\nprogramming with open standards like HTML5. All that is required is a compatible\r\nHTML5 web browser. As of today, Firefox 3.6, Safari and Chromium have successfully\r\nrun the web interface.\r\n\r\n## Building\r\nFusion currently runs on Windows 7/8, OS X 10.6+, and Linux (tested on Ubuntu 11.04+).  It currently uses the SCons tool to build on all platforms.\r\n\r\nThis means you have to install SCons to be able to compile Fusion.\r\nThe platform specific compile notes below include instruction on how to install\r\nSCons. Once you have SCons installed open a command line in the Fusion directory\r\n(the one with this README in it) and run the following command:\r\n\r\nTo build fusion (and dependencies if needed) run:\r\nscons\r\n\r\nTo clean fusion (remove any intermediate files, output libs and executables):\r\nscons -c  (or 'scons --clean')\r\n\r\nTo also clean the dependencies built in contrib:\r\nscons -c --clean-contrib\r\n\r\nFor more info about SCons, other options, or how to install it on any system,\r\nyou can check the SCons user guide at:\r\nhttp://www.scons.org/doc/production/HTML/scons-user.html\r\n\r\n### Windows 7/8\r\nTo build Fusion on Windows, you need Visual C++ 2010 and SCons (which also requires Python).\r\n1. Get Visual C++ Express 2010 (not needed if you have Visual Studio 2010). Download the free version here: http://www.microsoft.com/express/Downloads/#2010-Visual-CPP\r\n\r\n2. Get Python and SCons. Download and run the following installers:\r\n[Python](http://www.python.org/ftp/python/2.7.3/python-2.7.3.msi)\r\n[SCons](http://prdownloads.sourceforge.net/scons/scons-2.0.1.win32.exe)\r\n\r\nOK, you're ready to build.  If you installed everything to default locations just run: `scons`\r\n\r\nIf scons command is not found, try `C:\\Python2.7\\Scripts\\scons`\r\n\r\nNow you should be able to start fusion. Just double click the fusion executable or run it from the command line to use a config:\r\n```fusion -l config/ballworld/ballworld.cfg```\r\n\r\nNow that the daemon is running, you can simply open your browser\r\n(needs to be a browser with HTML5 and support for\r\nthe canvas object. Javascript also has to be enabled.) and navigate to the admin interface at http://127.0.0.1:7500/.\r\n\r\n### OS X and Linux\r\nOn OS X and Linux, Fusion is also built with SCons (http://www.scons.org).\r\n\r\n1. Download [SCons](http://prdownloads.sourceforge.net/scons/scons-2.0.1.zip)\r\n2. Unzip the file, open a terminal, and navigate to that directory:\r\n```cd scons-2.0.1```\r\n```python setup.py install```\r\n\r\nNow you're ready to build fusion.  Change directory to the Fusion sources.\r\n\r\n1. First, you need to build rtaudio. This can take some configuration, so check out `contrib/rtaudio/install`. Most times, though, you should just be able to build with `cd contrib/rtaudio && ./configure && make`.\r\n2. Next, go back to the root of the project and `scons`. This will (hopefully) build everything. Note: If you need to build fusion as 32bit, you can do so by forcing the -m32 flag on the compilers for both moved and all libs in contrib by running:\r\n```CC='gcc -m32' CXX='g++ -m32' scons```\r\n3. Run `./ccf`, and navigate to http://127.0.0.1:7500/ with a Canvas/HTML5/JS-enabled browser for configuration. Exit the server with `curl 127.0.0.1:7500/pipeline/quit`.\r\n4. Leave the config as-is and run the platform-specific Python file in `demo` for a quick demo of Fusion's functionality.\r\n\r\n## Documentation\r\n### OS X or Linux:\r\n1. Make sure you have Doxygen installed \r\n2. cd docs\r\n3. make\r\n\r\n### Windows:\r\n1. Run Doxygen on the Doxyfile in docs/","google":"UA-38848919-1","note":"Don't delete this file! It's used internally to help with page regeneration."}